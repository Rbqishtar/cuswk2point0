package ui;

import entity.Order;
import uicontrol.SeatCtrl;
import uiutility.PageSwitchHelper;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Font;

/**
 * The frame where passenger can choose his seat. He can:
 * <ol>
 *     <li>Have a visualisation of the seat layout of the flight</li>
 *	   <li>Select the column he wanted to take</li>
 *	   <li>Make some free requirements, like seating in a specific position on the plane</li>
 *	   <li>Pay extra to have premium seats, like first class or seats with extra legrooms</li>
 *	   <li>Have a random free seat, which is generated by the system</li>
 * </ol>
 *
 *
 * */
public class ChooseSeat_3 extends JFrame implements ActionListener {

	Order odr;
	private JPanel contentPane, p1, p2, p3, p11, p12, p13, p21, p22, p23, p31, p32, p33;
	private final JButton confirmOption, randomOption, clearOption, backToTopOption;
	private JComboBox<String> seat, pref;

	/**
	 * Create the frame.
	 *
	 * @param odr  record the seat number of the passenger, and possible extra fees. It will be passed to the next page
	 *             to record more information.
	 *
	 */
	public ChooseSeat_3(Order odr) {

		this.odr = odr;
		SeatCtrl seatCtrl = new SeatCtrl();

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 400, 500);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new GridLayout(3, 1, 0, 0));
		p1 = new JPanel(); p2 = new JPanel(); p3 = new JPanel();
			p11 = new JPanel(); p12 = new JPanel(); p13 = new JPanel();
			p21 = new JPanel(); p22 = new JPanel(); p23 = new JPanel();
			p31 = new JPanel(); p32 = new JPanel(); p33 = new JPanel();
		JPanel[] bigPanels = new JPanel[]{p1, p2, p3};
		JPanel[][] smallPanels = new JPanel[][]{{p11, p12, p13}, {p21, p22, p23}, {p31, p32, p33}};
		for (int i=0; i<3; i++) {
			JPanel bigJp = bigPanels[i];
			contentPane.add(bigJp);
			JPanel[] smallJps = smallPanels[i];
			bigJp.setLayout(new GridLayout(3, 1, 0, 0));
			for (JPanel jp: smallJps) {
				bigJp.add(jp);
			}
		}

		JLabel title = new JLabel("Select your seat: ");
		title.setAlignmentY(JLabel.CENTER);
		title.setFont(new Font("Dialog", Font.PLAIN, 28));
		p12.add(title);


		JLabel layoutTitle = new JLabel("Seat layout: ");
		JLabel layout;
		layoutTitle.setFont(new Font("Dialog", Font.PLAIN, 20));
		if (seatCtrl.getColNumber(odr.getFlightNo()) == 6) {
			layout = new JLabel("(Window) A B C|  |D E F (Window)");
		} else if (seatCtrl.getColNumber(odr.getFlightNo()) == 8) {
			layout = new JLabel("(Window) A B|  |C D E F|  |G H (Window)");
		} else layout = new JLabel("ifjkodwisjfcildjfil");
		p13.add(layoutTitle);
		p13.add(layout);

		String[] seats;
		if (seatCtrl.getColNumber(odr.getFlightNo()) == 6) {
			seats = new String[]{"---", "A", "B", "C", "D", "E", "F"};
		} else if (seatCtrl.getColNumber(odr.getFlightNo()) == 8) {
			seats = new String[]{"---", "A", "B", "C", "D", "E", "F", "G", "H"};
		} else seats = new String[]{"---"};
		seat = new JComboBox(seats);
		p22.add(new JLabel("Seat: "));
		p22.add(seat);

		String[] prefs = {"No preference", "Near emergency exit", "Near head", "Near tail", "Extra legroom (+$100)", "First class (+$1000)"};
		pref = new JComboBox(prefs);
		p23.add(new JLabel("Preference: "));
		p23.add(pref);


		backToTopOption = new JButton("Back to top");
		backToTopOption.addActionListener(this);
		clearOption = new JButton("Clear");
		clearOption.addActionListener(this);
		confirmOption = new JButton("Confirm");
		confirmOption.addActionListener(this);
		for (JButton btn : new JButton[]{backToTopOption, clearOption, confirmOption}) {
			p32.add(btn);
		}

		randomOption = new JButton("I give up. Let computer choose for me !");
		randomOption.addActionListener(this);
		p33.add(randomOption);

	}

	/**
	 * Defines the action of the buttons and combo boxes on the frame.
	 * <ol>
	 *     <li>backToTopOption</li>
	 *     Once clicked, the <code>odr</code> will be cleared, and the passenger will be brought to the top page.
	 *	   <li>clearOption</li>
	 *	   Once clicked, all the combo boxes will reset to first item.
	 *     <li>proceedOption</li>
	 *	   Once clicked, the system will do:
	 *	   <ol>
	 *	       <li>Validate all the inputs</li>
	 *	       <li>Check whether the desired seat is not available</li>
	 *	       <li>Read the items in the combo boxes</li>
	 *	       <li>Set <code>seatExtra</code> and <code>seatNo</code> in <code>odr</code>, where the <code>seatExtra</code> is determined by row number</li>
	 *	       <li>Proceed to next page</li>
	 *	   </ol>
	 * </ol>
	 *
	 * */
	@Override
	public void actionPerformed(ActionEvent e) {
		SeatCtrl seatCtrl = new SeatCtrl();
		if (e.getSource() == backToTopOption) {
			if (JOptionPane.showConfirmDialog(null, "Sure?", "Sure?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
				PageSwitchHelper.goToPage(this, null, 0);
		} else if (e.getSource() == clearOption) {
			seat.setSelectedIndex(0);
			pref.setSelectedIndex(0);
		} else if (e.getSource() == randomOption) {
			seatCtrl.generateRandomSeat(odr);
			PageSwitchHelper.goToPage(this, odr, 4);
		} else if (e.getSource() == confirmOption) {
			int row = seatCtrl.getRowFromSelectedIndex(pref.getSelectedIndex(), odr.getFlightNo());
			int col = seat.getSelectedIndex();
			if (col != 0) {
				if (seatCtrl.canInsertSeat(odr.getFlightNo(), row, col)) {
					odr.setSeatno(seatCtrl.convertSeatNo(row, col));
					odr.setSeatExtra(seatCtrl.calculateSeatExtra(row));
					PageSwitchHelper.goToPage(this, odr, 4);
				} else JOptionPane.showConfirmDialog(null, "seat not available", "sad", JOptionPane.DEFAULT_OPTION);
			} else JOptionPane.showConfirmDialog(null, "select a column !!!", "?", JOptionPane.DEFAULT_OPTION);
		} else JOptionPane.showConfirmDialog(null, "getsource error", "?", JOptionPane.DEFAULT_OPTION);
	}

}
